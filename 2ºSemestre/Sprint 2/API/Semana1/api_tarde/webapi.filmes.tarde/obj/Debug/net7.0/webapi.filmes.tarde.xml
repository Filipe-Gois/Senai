<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controllers.FilmeController">
            <summary>
            Route: define que a rota de uma requisição será no seguinte formato: dominio/api/nomeController
            Ex: http://Localhost:5000/api/genero
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastra um filme associado à um gênero
            </summary>
            <param name="filme"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Delete(System.Int32)">
            <summary>
            Deleta um filme através de seu ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.BuscarPorId(System.Int32)">
            <summary>
            Busca um filme através de seu ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.ListarTodos">
            <summary>
            Lista todos os filmes cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.AtualizarPorUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza os dados de um filme passando seu ID pela URL
            </summary>
            <param name="id"></param>
            <param name="filme"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza os dados de um filme passando seu ID pelo corpo 
            </summary>
            <param name="filme"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Route: define que a rota de uma requisição será no seguinte formato: dominio/api/nomeController
            Ex: http://Localhost:5000/api/genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Get">
            <summary>
            EndPoint que acessa o método de listar os generos
            </summary>
            <returns>Lista de generos e um StatusCode</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.BuscarPorId(System.Int32)">
            <summary>
            EndPoint que acessa o método de buscar genero por Id
            </summary>
            <param name="id">Objeto recebido na requisição</param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            EndPoint que acessa o método de cadastrar genero
            </summary>
            <param name="genero">Objeto recebido na requisição</param>
            <returns>StatusCode</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            EndPoint que acessa o método de deletar genero
            </summary>
            <param name="id">Objeto recebido na requisição</param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.AtualizarPorIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero informando o Id pelo corpo
            </summary>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.AtualizarIdPorUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero informando o Id pela URL
            </summary>
            <param name="id"></param>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.UsuarioController">
            <summary>
            Route: define que a rota de uma requisição será no seguinte formato: dominio/api/nomeController
            Ex: http://Localhost:5000/api/genero
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.Login(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            
            </summary>
            <param name="email"></param>
            <param name="senha"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que rerpesenta a entidade/table Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade/tabela Gêneros
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.UsuarioDomain">
            <summary>
            Classe que representa a entidade(tabela) Usuario
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo Gênero de filme
            </summary>
            <param name="NovoGenero">Objeto que será cadastrado</param>
            
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retorna todos os gênero cadastrados
            </summary>
            <returns>Uma lista de gêneros</returns>
            
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através de seu ID
            </summary>
            <param name="id">ID do objeto que será buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente, passando o ID pelo corpo da requisição
            </summary>
            <param name="genero">Objeto gênero com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdURL(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente, passando um ID pela URL e só alterando as informações no corpo
            </summary>
            <param name="id">ID do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="id">ID do objeto a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.BuscarUsuario(System.String,System.String)">
            <summary>
            Método que busca um usuário por email e senha
            pode ser chamado de login
            </summary>
            <param name="email">email do usuario</param>
            <param name="senha">senha do usuario</param>
            <returns>objeto que foi buscado(usuario)</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza os dados de um filme passando seu ID pelo corpo 
            </summary>
            <param name="filme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza os dados de um filme passando seu ID pela URL
            </summary>
            <param name="id"></param>
            <param name="filme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um filme através de seu ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastra um novo filme
            </summary>
            <param name="filme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Deletar(System.Int32)">
            <summary>
            Deleta um filme através de seu ID
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Lista todos os filmes cadastrados
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao" -->
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo genero
            </summary>
            <returns>Lista de objetos do tipo gênero</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um gênero através de seu ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo genero
            </summary>
            <param name="NovoGenero">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um gênero passando o ID pela URL
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gêenero através do ID passado pelo corpo
            </summary>
            <param name="genero"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdURL(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando o ID pela URL
            </summary>
            <param name="id"></param>
            <param name="genero"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.BuscarUsuario(System.String,System.String)">
            <summary>
            Método de Login
            </summary>
            <param name="email"></param>
            <param name="senha"></param>
            <returns></returns>
        </member>
    </members>
</doc>
